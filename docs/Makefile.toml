[config]
min_version = "0.32.0"

[env]
ALL_FILES = [
    "./keep/sgx/syscall.msc",
    "./attestation/amd/sev/certchain.dot",
    "./attestation/amd/sev/process.msc",
    "./attestation/ibm/pef/certchain.dot",
    "./attestation/ibm/pef/process.msc",
    "./attestation/intel/sgx/sgx_certchain.dot",
    "./attestation/intel/sgx/sgx_process.msc"
]

[tasks.diagram-flow]
condition = { file_exists = ["${FILENAME}"], env_set = ["FILENAME"]}
script_runner = "@duckscript"
script = [
'''
image_outdated = set true
if is_path_exists "${FILENAME}.png"
    image_outdated = is_path_newer "${FILENAME}" "${FILENAME}.png"
end

if ${image_outdated}
    if ends_with ${FILENAME} ".msc"
        cm_run_task msc
    elseif ends_with ${FILENAME} ".dot"
        cm_run_task dot
    end
end
'''
]

[tasks.msc]
command = "mscgen"
args = ["-T", "png", "-o", "${FILENAME}.png", "${FILENAME}"]

[tasks.dot]
command = "dot"
args = ["-T", "png", "-o", "${FILENAME}.png", "${FILENAME}"]


[tasks.diagrams]
script_runner = "@duckscript"
script = [
'''
files_array = split ${ALL_FILES} ";"
for file in ${files_array}
  set_env FILENAME ${file}
  cm_run_task diagram-flow
end
'''
]

[tasks.check-diagrams]
workspace = false
script_runner = "@duckscript"
script = [
'''
files_array = split ${ALL_FILES} ";"
success = set true
for file in ${files_array}
  source_date = exec git log -1 --date=unix --format="%cd" -- "${file}"
  source_date_out = trim ${source_date.stdout}
  diagram_date = exec git log -1 --date=unix --format="%cd" -- "${file}.png"
  diagram_date_out = trim ${diagram_date.stdout}
  if less_than ${diagram_date_out} ${source_date_out}
    echo "This diagram is out-of-date: ${file}. Please generate an updated diagram and commit it to include it with your pull request."
    success = set false
  end
end
assert ${success} "Some diagrams are out of date"
'''
]

[tasks.clean-diagrams]
script_runner = "@duckscript"
script = [
'''
files_array = split ${ALL_FILES} ";"
for file in ${files_array}
  rm "${file}.png"
end
'''
]

