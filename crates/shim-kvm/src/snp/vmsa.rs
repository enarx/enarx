// SPDX-License-Identifier: Apache-2.0

//! VMSA page related functions

use crate::snp::{rmpadjust, ByteSized, RmpadjustError, RmpadjustSize, RMPADJUST_VMSA_PAGE_BIT};
use alloc::boxed::Box;
use const_default::ConstDefault;

use crate::addr::{ShimPhysAddr, ShimVirtAddr};
use crate::snp::ghcb::GHCB;
use x86_64::VirtAddr;

/// Turn a page to a VMSA page or not
pub fn rmpadjust_vmsa_page(addr: VirtAddr, vmsa: bool) -> Result<(), RmpadjustError> {
    // VMPL = 1
    // Must use VMPL = 1 to set the VMSA bit according to the AMD rmpadjust documentation
    let mut attrs: u64 = 1;
    if vmsa {
        attrs |= RMPADJUST_VMSA_PAGE_BIT;
    }
    rmpadjust(addr, RmpadjustSize::Size4K, attrs)
}

/// Install an AP VMSA page
fn install_ap_vmsa_page() -> Result<ShimVirtAddr<SevEsSaveArea>, RmpadjustError> {
    let page = Box::new(SevEsSaveArea::AP_BOOT);
    let addr = VirtAddr::from_ptr(page.as_ref());
    let shim_virt = ShimVirtAddr::from(page.as_ref());
    rmpadjust_vmsa_page(addr, true)?;
    Box::leak(page);
    Ok(shim_virt)
}

/// Start a new AP
pub fn start_ap(apic_id: u16) -> Result<(), RmpadjustError> {
    let virt = install_ap_vmsa_page()?;
    let phys = ShimPhysAddr::try_from(virt).unwrap();
    let vmsa_pa = dbg!(phys.raw().raw());
    GHCB.ap_creation(apic_id, vmsa_pa, SevEsSaveArea::AP_BOOT.sev_features);
    Ok(())
}

#[derive(Debug)]
#[repr(C)]
struct VmcbSeg(u16, u16, u32, u64);

impl ConstDefault for VmcbSeg {
    const DEFAULT: Self = Self(0, 0, 0, 0);
}

#[derive(Debug)]
#[repr(C, align(4096))]
struct SevEsSaveArea {
    es: VmcbSeg,
    cs: VmcbSeg,
    ss: VmcbSeg,
    ds: VmcbSeg,
    fs: VmcbSeg,
    gs: VmcbSeg,
    gdtr: VmcbSeg,
    ldtr: VmcbSeg,
    idtr: VmcbSeg,
    tr: VmcbSeg,
    vmpl0_ssp: u64,
    vmpl1_ssp: u64,
    vmpl2_ssp: u64,
    vmpl3_ssp: u64,
    u_cet: u64,
    reserved_1: [u8; 2],
    vmpl: u8,
    cpl: u8,
    reserved_2: [u8; 4],
    efer: u64,
    reserved_3: [u8; 104],
    xss: u64,
    cr4: u64,
    cr3: u64,
    cr0: u64,
    dr7: u64,
    dr6: u64,
    rflags: u64,
    rip: u64,
    dr0: u64,
    dr1: u64,
    dr2: u64,
    dr3: u64,
    dr0_addr_mask: u64,
    dr1_addr_mask: u64,
    dr2_addr_mask: u64,
    dr3_addr_mask: u64,
    reserved_4: [u8; 24],
    rsp: u64,
    s_cet: u64,
    ssp: u64,
    isst_addr: u64,
    rax: u64,
    star: u64,
    lstar: u64,
    cstar: u64,
    sfmask: u64,
    kernel_gs_base: u64,
    sysenter_cs: u64,
    sysenter_esp: u64,
    sysenter_eip: u64,
    cr2: u64,
    reserved_5: [u8; 32],
    g_pat: u64,
    dbgctrl: u64,
    br_from: u64,
    br_to: u64,
    last_excp_from: u64,
    last_excp_to: u64,
    reserved_7: [u8; 80],
    pkru: u32,
    reserved_8: [u8; 20],
    reserved_9: u64,
    rcx: u64,
    rdx: u64,
    rbx: u64,
    reserved_10: u64,
    rbp: u64,
    rsi: u64,
    rdi: u64,
    r8: u64,
    r9: u64,
    r10: u64,
    r11: u64,
    r12: u64,
    r13: u64,
    r14: u64,
    r15: u64,
    reserved_11: [u8; 16],
    guest_exit_info_1: u64,
    guest_exit_info_2: u64,
    guest_exit_int_info: u64,
    guest_nrip: u64,
    sev_features: u64,
    vintr_ctrl: u64,
    guest_exit_code: u64,
    virtual_tom: u64,
    tlb_id: u64,
    pcpu_id: u64,
    event_inj: u64,
    xcr0: u64,
    reserved_12: [u8; 16],
    x87_dp: u64,
    mxcsr: u32,
    x87_ftw: u16,
    x87_fsw: u16,
    x87_fcw: u16,
    x87_fop: u16,
    x87_ds: u16,
    x87_cs: u16,
    x87_rip: u64,
    fpreg_x87: [u8; 80],
    fpreg_xmm: [u8; 256],
    fpreg_ymm: [u8; 256],
    unused: [u8; 2448],
}

impl ConstDefault for SevEsSaveArea {
    const DEFAULT: Self = Self {
        es: VmcbSeg::DEFAULT,
        cs: VmcbSeg::DEFAULT,
        ss: VmcbSeg::DEFAULT,
        ds: VmcbSeg::DEFAULT,
        fs: VmcbSeg::DEFAULT,
        gs: VmcbSeg::DEFAULT,
        gdtr: VmcbSeg::DEFAULT,
        ldtr: VmcbSeg::DEFAULT,
        idtr: VmcbSeg::DEFAULT,
        tr: VmcbSeg::DEFAULT,
        vmpl0_ssp: 0,
        vmpl1_ssp: 0,
        vmpl2_ssp: 0,
        vmpl3_ssp: 0,
        u_cet: 0,
        reserved_1: [0; 2],
        vmpl: 0,
        cpl: 0,
        reserved_2: [0; 4],
        efer: 0,
        reserved_3: [0; 104],
        xss: 0,
        cr4: 0,
        cr3: 0,
        cr0: 0,
        dr7: 0,
        dr6: 0,
        rflags: 0,
        rip: 0,
        dr0: 0,
        dr1: 0,
        dr2: 0,
        dr3: 0,
        dr0_addr_mask: 0,
        dr1_addr_mask: 0,
        dr2_addr_mask: 0,
        dr3_addr_mask: 0,
        reserved_4: [0; 24],
        rsp: 0,
        s_cet: 0,
        ssp: 0,
        isst_addr: 0,
        rax: 0,
        star: 0,
        lstar: 0,
        cstar: 0,
        sfmask: 0,
        kernel_gs_base: 0,
        sysenter_cs: 0,
        sysenter_esp: 0,
        sysenter_eip: 0,
        cr2: 0,
        reserved_5: [0; 32],
        g_pat: 0,
        dbgctrl: 0,
        br_from: 0,
        br_to: 0,
        last_excp_from: 0,
        last_excp_to: 0,
        reserved_7: [0; 80],
        pkru: 0,
        reserved_8: [0; 20],
        reserved_9: 0,
        rcx: 0,
        rdx: 0,
        rbx: 0,
        reserved_10: 0,
        rbp: 0,
        rsi: 0,
        rdi: 0,
        r8: 0,
        r9: 0,
        r10: 0,
        r11: 0,
        r12: 0,
        r13: 0,
        r14: 0,
        r15: 0,
        reserved_11: [0; 16],
        guest_exit_info_1: 0,
        guest_exit_info_2: 0,
        guest_exit_int_info: 0,
        guest_nrip: 0,
        sev_features: 0,
        vintr_ctrl: 0,
        guest_exit_code: 0,
        virtual_tom: 0,
        tlb_id: 0,
        pcpu_id: 0,
        event_inj: 0,
        xcr0: 0,
        reserved_12: [0; 16],
        x87_dp: 0,
        mxcsr: 0,
        x87_ftw: 0,
        x87_fsw: 0,
        x87_fcw: 0,
        x87_fop: 0,
        x87_ds: 0,
        x87_cs: 0,
        x87_rip: 0,
        fpreg_x87: [0; 80],
        fpreg_xmm: [0; 256],
        fpreg_ymm: [0; 256],
        unused: [0; 2448],
    };
}

impl SevEsSaveArea {
    const AP_BOOT: Self = Self {
        es: VmcbSeg(0, 0x92, 0xffff, 0),
        cs: VmcbSeg(0xf000, 0x9a, 0xffff, 0xffff0000),
        ss: VmcbSeg(0, 0x92, 0xffff, 0),
        ds: VmcbSeg(0, 0x92, 0xffff, 0),
        fs: VmcbSeg(0, 0x92, 0xffff, 0),
        gs: VmcbSeg(0, 0x92, 0xffff, 0),
        gdtr: VmcbSeg(0, 0, 0xffff, 0),
        idtr: VmcbSeg(0, 0, 0xffff, 0),
        ldtr: VmcbSeg(0, 0x82, 0xffff, 0),
        tr: VmcbSeg(0, 0x83, 0xffff, 0),
        efer: 0x1000, // KVM enables EFER_SVME
        cr4: 0x40,    // KVM enables X86_CR4_MCE
        cr0: 0x10,
        dr7: 0x400,
        dr6: 0xffff0ff0,
        rflags: 0x2,
        rip: 0xfff0,
        g_pat: 0x7040600070406, // PAT MSR: See AMD APM Vol 2, Section A.3
        sev_features: 1,        // SEV-SNP
        //rdx: 0xa00f11, // 'EPYC-Milan': family=25, model=1, stepping=1
        rdx: 0x600, // KVM uses 0x600
        xcr0: 0x1,
        vmpl0_ssp: 0,
        vmpl1_ssp: 0,
        vmpl2_ssp: 0,
        vmpl3_ssp: 0,
        u_cet: 0,
        reserved_1: [0; 2],
        vmpl: 0,
        cpl: 0,
        reserved_2: [0; 4],
        reserved_3: [0; 104],
        xss: 0,
        cr3: 0,
        dr0: 0,
        dr1: 0,
        dr2: 0,
        dr3: 0,
        dr0_addr_mask: 0,
        dr1_addr_mask: 0,
        dr2_addr_mask: 0,
        dr3_addr_mask: 0,
        reserved_4: [0; 24],
        rsp: 0,
        s_cet: 0,
        ssp: 0,
        isst_addr: 0,
        rax: 0,
        star: 0,
        lstar: 0,
        cstar: 0,
        sfmask: 0,
        kernel_gs_base: 0,
        sysenter_cs: 0,
        sysenter_esp: 0,
        sysenter_eip: 0,
        cr2: 0,
        reserved_5: [0; 32],
        dbgctrl: 0,
        br_from: 0,
        br_to: 0,
        last_excp_from: 0,
        last_excp_to: 0,
        reserved_7: [0; 80],
        pkru: 0,
        reserved_8: [0; 20],
        reserved_9: 0,
        rcx: 0,
        rbx: 0,
        reserved_10: 0,
        rbp: 0,
        rsi: 0,
        rdi: 0,
        r8: 0,
        r9: 0,
        r10: 0,
        r11: 0,
        r12: 0,
        r13: 0,
        r14: 0,
        r15: 0,
        reserved_11: [0; 16],
        guest_exit_info_1: 0,
        guest_exit_info_2: 0,
        guest_exit_int_info: 0,
        guest_nrip: 0,
        vintr_ctrl: 0,
        guest_exit_code: 0,
        virtual_tom: 0,
        tlb_id: 0,
        pcpu_id: 0,
        event_inj: 0,
        reserved_12: [0; 16],
        x87_dp: 0,
        mxcsr: 0,
        x87_ftw: 0,
        x87_fsw: 0,
        x87_fcw: 0,
        x87_fop: 0,
        x87_ds: 0,
        x87_cs: 0,
        x87_rip: 0,
        fpreg_x87: [0; 80],
        fpreg_xmm: [0; 256],
        fpreg_ymm: [0; 256],
        unused: [0; 2448],
    };
}

unsafe impl ByteSized for SevEsSaveArea {}
