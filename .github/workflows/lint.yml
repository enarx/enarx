name: lint

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt:
    name: cargo fmt (${{ matrix.crate.name }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust toolchain
        run: rustup show
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=${{ matrix.crate.path }} -- --check
    strategy:
      fail-fast: false
      matrix:
        crate:
          - {name: enarx, path: Cargo.toml}
          - {name: shim-sgx, path: src/bin/shim-sgx/Cargo.toml}
          - {name: shim-kvm, path: src/bin/shim-kvm/Cargo.toml}
          - {name: exec-wasmtime, path: src/bin/exec-wasmtime/Cargo.toml}
          - {name: sallyport, path: crates/sallyport/Cargo.toml}

  clippy:
    name: cargo clippy (${{ matrix.crate.name }})
    runs-on: ubuntu-20.04
    steps:
      - run: sudo apt -o Acquire::Retries=3 update
      - run: sudo apt -o Acquire::Retries=3 install -y musl-tools
      - uses: actions/checkout@v2
      - name: Setup Rust toolchain
        run: rustup show
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.crate.target }} --all-features --manifest-path=${{ matrix.crate.path }} -- -D warnings
    strategy:
      fail-fast: false
      matrix:
        crate:
          - {name: enarx, path: Cargo.toml}
          - name: shim-sgx
            path: src/bin/shim-sgx/Cargo.toml
            target: --target=x86_64-unknown-none
          - name: shim-kvm
            path: src/bin/shim-kvm/Cargo.toml
            target: --target=x86_64-unknown-none
          - name: exec-wasmtime
            path: src/bin/exec-wasmtime/Cargo.toml
            target: --target=x86_64-unknown-linux-musl
          - name: sallyport
            path: crates/sallyport/Cargo.toml
            target: --target=x86_64-unknown-none

  clippy-single-backends:
    name: cargo clippy (enarx ${{ matrix.backend.name }} ${{ matrix.profile.name }})
    runs-on: ubuntu-20.04
    steps:
      - run: sudo apt -o Acquire::Retries=3 update
      - run: sudo apt -o Acquire::Retries=3 install -y musl-tools
      - uses: actions/checkout@v2
      - name: Setup Rust toolchain
        run: rustup show
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.profile.flag }} --no-default-features --features=backend-${{ matrix.backend.name }} -- -D warnings
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.profile.flag }} --no-default-features --features=backend-${{ matrix.backend.name }} --examples -- -D warnings
    strategy:
      fail-fast: false
      matrix:
        backend:
          - {name: sev, host: [self-hosted, linux, sev-snp]}
          - {name: sgx, host: [self-hosted, linux, sgx]}
          - {name: kvm, host: [self-hosted, linux]}
        profile:
          - name: debug
          - name: release
            flag: --release

  readme:
    name: cargo readme (${{matrix.crate.name}})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust toolchain
        run: rustup show
      - run: cargo install cargo-readme
      - run: cargo readme --project-root ${{ matrix.crate.path }} > ${{ matrix.crate.path}}/README.md && git diff --exit-code
    strategy:
      fail-fast: false
      matrix:
        crate:
          - { name: enarx, path: . }
          - { name: exec-wasmtime, path: src/bin/exec-wasmtime }
          - { name: sallyport, path: crates/sallyport }

  deny:
    name: cargo deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          arguments: --workspace --manifest-path=${{ matrix.crate.path }}
    strategy:
      fail-fast: false
      matrix:
        crate:
          - {name: enarx, path: ./Cargo.toml}
          - {name: shim-sgx, path: src/bin/shim-sgx/Cargo.toml}
          - {name: shim-kvm, path: src/bin/shim-kvm/Cargo.toml}
          - {name: exec-wasmtime, path: src/bin/exec-wasmtime/Cargo.toml}
          - {name: sallyport, path: crates/sallyport/Cargo.toml}

  check-spdx-headers:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: enarx/spdx@master
        with:
          licenses: Apache-2.0 BSD-3-Clause MIT
