name: lint

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt:
    name: cargo fmt (${{ matrix.crate.name }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: enarx
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix profile install --impure '.#devShell.x86_64-linux'
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=${{ matrix.crate.path }} -- --check
    strategy:
      fail-fast: false
      matrix:
        crate:
          - {name: enarx, path: Cargo.toml}
          - {name: shim-sgx, path: crates/shim-sgx/Cargo.toml}
          - {name: shim-kvm, path: crates/shim-kvm/Cargo.toml}
          - {name: enarx-config, path: crates/enarx-config/Cargo.toml}
          - {name: exec-wasmtime, path: crates/exec-wasmtime/Cargo.toml}
          - {name: sallyport, path: crates/sallyport/Cargo.toml}
          - {name: tcp_server, path: examples/tcp_server/Cargo.toml}

  clippy:
    name: cargo clippy (${{ matrix.crate.name }})
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: enarx
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix profile install --impure '.#devShell.x86_64-linux'
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.crate.target }} --all-features --manifest-path=${{ matrix.crate.path }} -- -D warnings
    strategy:
      fail-fast: false
      matrix:
        crate:
          - name: enarx
            path: Cargo.toml
          - name: shim-sgx
            path: crates/shim-sgx/Cargo.toml
            target: --target=x86_64-unknown-none
          - name: shim-kvm
            path: crates/shim-kvm/Cargo.toml
            target: --target=x86_64-unknown-none
          - name: enarx-config
            path: crates/enarx-config/Cargo.toml
            target: --target=x86_64-unknown-linux-musl
          - name: exec-wasmtime
            path: crates/exec-wasmtime/Cargo.toml
            target: --target=x86_64-unknown-linux-musl
          - name: sallyport
            path: crates/sallyport/Cargo.toml
            target: --target=x86_64-unknown-none
          - name: tcp_server
            path: examples/tcp_server/Cargo.toml
            target: --target=wasm32-wasi

  deny:
    name: cargo deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          arguments: --workspace --manifest-path=${{ matrix.crate.path }}
    strategy:
      fail-fast: false
      matrix:
        crate:
          - {name: enarx, path: ./Cargo.toml}
          - {name: shim-sgx, path: crates/shim-sgx/Cargo.toml}
          - {name: shim-kvm, path: crates/shim-kvm/Cargo.toml}
          - {name: enarx-config, path: crates/enarx-config/Cargo.toml}
          - {name: exec-wasmtime, path: crates/exec-wasmtime/Cargo.toml}
          - {name: sallyport, path: crates/sallyport/Cargo.toml}

  check-spdx-headers:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: enarx/spdx@master
        with:
          licenses: Apache-2.0 BSD-3-Clause MIT
