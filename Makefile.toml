[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_WORKSPACE_EMULATION = true
CARGO_MAKE_CRATE_WORKSPACE_MEMBERS = [
	"bounds",
	"crt0stack",
	"enarx-keep",
	"enarx-keep-sev",
	"enarx-keep-sev-shim",
	"enarx-keep-sgx",
	"enarx-keep-sgx-shim",
	"enumerate",
	"integration-tests",
	"intel-types",
	"iocuddle",
	"keep-runtime",
	"loader",
	"memory",
	"sallyport",
	"sev",
	"sevctl",
	"sgx",
	"units",
	"vdso"
]
ENARX_TEST_DIR = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/.tests"
ENARX_DOCS_DIR = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/docs"

# Run all automated unit and integration tests locally (except
# for any tests that modify platform state).
[tasks.ci]
workspace = false
dependencies = ["fork-for-crate-ci-flows", "workspace-ci-flows"]

# Tasks that must be ran once at the workspace root (i.e., they don't
# make sense to run for individual crates).
[tasks.workspace-ci-flows]
workspace = false
dependencies = [
	"misc-diagrams"
]

# Wrapper task for crate-specific tasks. Using this wrapper
# allows the crate-ci-flows to be expressed as an array of
# dependencies. It is important to fork so that cargo-make's
# child process detects that it is running in a workspace
# member crate, and it will shed the previous "workspace = false"
# constraint.
[tasks.fork-for-crate-ci-flows]
run_task = { name = "crate-ci-flows", fork = true }

# Tasks that must be ran against individual crates.
[tasks.crate-ci-flows]
dependencies = [
	"ci-flow"
]

[tasks.deny]
command = "cargo"
args = ["deny", "check", "licenses"]

[tasks.misc-lints-missing-docs]
command = "${ENARX_TEST_DIR}/misc-lints-missing-docs"

[tasks.cargo-toml-package-edition]
install_crate = { crate_name = "toml-cli", binary = "toml", test_arg = "--help" }
command = "${ENARX_TEST_DIR}/cargo-toml-package-edition"

[tasks.misc-lints-clippy-all]
command = "${ENARX_TEST_DIR}/misc-lints-clippy-all"

[tasks.misc-licenses-rs-spdx]
command = "${ENARX_TEST_DIR}/misc-licenses-rs-spdx"

[tasks.misc-licenses-asm-spdx]
command = "${ENARX_TEST_DIR}/misc-licenses-asm-spdx"

[tasks.misc-diagrams]
workspace = false
command = "cargo"
args = ["make", "check-diagrams"]
cwd = "${ENARX_DOCS_DIR}"

[tasks.cargo-toml-package-license]
command = "${ENARX_TEST_DIR}/cargo-toml-package-license"

[tasks.misc-licenses-crate]
command = "${ENARX_TEST_DIR}/misc-licenses-crate"

[tasks.integration]
workspace = false
env = { "CARGO_MAKE_WORKSPACE_INCLUDE_MEMBERS" = "integration-tests" }
run_task = { name = "integration-test", fork = true }

[tasks.integration-test]
command = "cargo"
args = ["test"]

[tasks.integration-ci]
workspace = false
run_task = [
    { name = ["ci-flow", "integration"], fork = true },
]

# Add additional tests to the predefined 'ci-flow' target.
[tasks.pre-ci-flow]
dependencies = [
	"cargo-toml-package-edition",
	"cargo-toml-package-license",
	"check-format",
	"deny",
	"misc-licenses-asm-spdx",
	"misc-licenses-crate",
	"misc-licenses-rs-spdx",
	"misc-lints-clippy-all",
	"misc-lints-missing-docs",
]
